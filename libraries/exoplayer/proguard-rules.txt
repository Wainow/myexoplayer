# Proguard rules specific to the core module.

# Constructors accessed via reflection in DefaultRenderersFactory
-dontnote androidx.mynewmedia4.decoder.vp9.LibvpxVideoRenderer
-keepclassmembers class androidx.mynewmedia4.decoder.vp9.LibvpxVideoRenderer {
  <init>(long, android.os.Handler, androidx.mynewmedia4.exoplayer.video.VideoRendererEventListener, int);
}
-dontnote androidx.mynewmedia4.decoder.av1.Libgav1VideoRenderer
-keepclassmembers class androidx.mynewmedia4.decoder.av1.Libgav1VideoRenderer {
  <init>(long, android.os.Handler, androidx.mynewmedia4.exoplayer.video.VideoRendererEventListener, int);
}
-dontnote androidx.mynewmedia4.decoder.opus.LibopusAudioRenderer
-keepclassmembers class androidx.mynewmedia4.decoder.opus.LibopusAudioRenderer {
  <init>(android.os.Handler, androidx.mynewmedia4.exoplayer.audio.AudioRendererEventListener, androidx.mynewmedia4.exoplayer.audio.AudioSink);
}
-dontnote androidx.mynewmedia4.decoder.flac.LibflacAudioRenderer
-keepclassmembers class androidx.mynewmedia4.decoder.flac.LibflacAudioRenderer {
  <init>(android.os.Handler, androidx.mynewmedia4.exoplayer.audio.AudioRendererEventListener, androidx.mynewmedia4.exoplayer.audio.AudioSink);
}
-dontnote androidx.mynewmedia4.decoder.ffmpeg.FfmpegAudioRenderer
-keepclassmembers class androidx.mynewmedia4.decoder.ffmpeg.FfmpegAudioRenderer {
  <init>(android.os.Handler, androidx.mynewmedia4.exoplayer.audio.AudioRendererEventListener, androidx.mynewmedia4.exoplayer.audio.AudioSink);
}

# Constructors accessed via reflection in DefaultDownloaderFactory
-dontnote androidx.mynewmedia4.exoplayer.dash.offline.DashDownloader
-keepclassmembers class androidx.mynewmedia4.exoplayer.dash.offline.DashDownloader {
  <init>(androidx.mynewmedia4.common.MediaItem, androidx.mynewmedia4.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote androidx.mynewmedia4.exoplayer.hls.offline.HlsDownloader
-keepclassmembers class androidx.mynewmedia4.exoplayer.hls.offline.HlsDownloader {
  <init>(androidx.mynewmedia4.common.MediaItem, androidx.mynewmedia4.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote androidx.mynewmedia4.exoplayer.smoothstreaming.offline.SsDownloader
-keepclassmembers class androidx.mynewmedia4.exoplayer.smoothstreaming.offline.SsDownloader {
  <init>(androidx.mynewmedia4.common.MediaItem, androidx.mynewmedia4.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}

# Constructors accessed via reflection in DefaultMediaSourceFactory
-dontnote androidx.mynewmedia4.exoplayer.dash.DashMediaSource$Factory
-keepclasseswithmembers class androidx.mynewmedia4.exoplayer.dash.DashMediaSource$Factory {
  <init>(androidx.mynewmedia4.datasource.DataSource$Factory);
}
-dontnote androidx.mynewmedia4.exoplayer.hls.HlsMediaSource$Factory
-keepclasseswithmembers class androidx.mynewmedia4.exoplayer.hls.HlsMediaSource$Factory {
  <init>(androidx.mynewmedia4.datasource.DataSource$Factory);
}
-dontnote androidx.mynewmedia4.exoplayer.smoothstreaming.SsMediaSource$Factory
-keepclasseswithmembers class androidx.mynewmedia4.exoplayer.smoothstreaming.SsMediaSource$Factory {
  <init>(androidx.mynewmedia4.datasource.DataSource$Factory);
}
-dontnote androidx.mynewmedia4.exoplayer.rtsp.RtspMediaSource$Factory
-keepclasseswithmembers class androidx.mynewmedia4.exoplayer.rtsp.RtspMediaSource$Factory {
  <init>();
}
